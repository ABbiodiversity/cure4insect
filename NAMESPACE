export(
    load_common_data,
    subset_common_data,
    load_species_data,
    clear_common_data,
    clear_subset_data,
    calculate_results,
    flatten,
    report_all,
    custom_report,
    custom_predict,
    set_options,
    overlay_polygon,
    get_all_id,
    get_id_table,
    get_all_species,
    get_id_locations,
    get_species_table,
    is_loaded,
    plot_sector,
    plot_abundance,
    plot_intactness,
    rasterize_results,
    load_spclim_data,
    combine_veg_soil,
    predict_mat,
    get_levels,
    get_version_info,
    make_multispecies_map,
    make_subset_map,
    get_all_qsid,
    qs2km,
    get_subset_info,
    get_subset_id,
    get_subset_species,
    p_bird,
    dowload_data)

export(
    app_read_csv,
    app_test,
    .calculate_results,
    .load_species_data,
    .report_all_by1,
    .read_raster_template,
    .make_raster,
    .rasterize_multi,
    .calculate_limit,
    .verbose,
    .get_cores,
    .check,
    .combine_veg_soil,
    .validate_id,
    .verbose,
    .select_id,
    .truncate)

S3method(flatten, c4iraw)
S3method(plot_sector, c4iraw)
S3method(plot_sector, c4idf)
S3method(plot_intactness, c4idf)
S3method(predict, c4ispclim)
S3method(predict_mat, c4ispclim)

importFrom("graphics", "abline", "axis", "barplot", "box", "hist",
    "lines", "mtext", "par", "plot", "points", "polygon",
    "rect", "rug", "segments", "text", "title")
importFrom("grDevices", "boxplot.stats", "rgb")
importFrom("intrval", "%)(%", "%[]%", "%ni%")
importFrom("KernSmooth", "bkde")
importFrom("Matrix", "colSums")
importFrom("mefa4", "Xtab")
importFrom("methods", "as")
importFrom("parallel", "detectCores", "makeCluster", "stopCluster",
    "clusterEvalQ", "clusterExport")
importFrom("pbapply", "getTimeAsString", "pblapply", "pboptions")
importFrom("raster", "raster", "extract", "mask", "trim", "values", "values<-")
importFrom("sendmailR", "sendmail", "mime_part")
importFrom("sp", "identicalCRS", "over", "spTransform", "coordinates",
    "proj4string", "coordinates<-", "proj4string<-")
importFrom("stats", "quantile", "density", "sd", "poisson", "binomial",
    "aggregate", "predict")
importFrom("utils", "flush.console", "stack", "write.csv", "read.csv",
    "download.file")

importMethodsFrom("Matrix", "as.matrix")
importMethodsFrom("mefa4", "as.matrix")
importMethodsFrom("raster", "as.matrix", "stack", "extract")
